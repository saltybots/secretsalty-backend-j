/*
 * This file is generated by jOOQ.
 */
package data.jooq.tables.records;


import data.jooq.tables.Group;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GroupRecord extends UpdatableRecordImpl<GroupRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.group.uuid</code>.
     */
    public GroupRecord setUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.group.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.group.created</code>.
     */
    public GroupRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.group.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.group.last_modified</code>.
     */
    public GroupRecord setLastModified(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.group.last_modified</code>.
     */
    public LocalDateTime getLastModified() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.group.invite</code>.
     */
    public GroupRecord setInvite(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.group.invite</code>.
     */
    public String getInvite() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.group.status</code>.
     */
    public GroupRecord setStatus(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.group.status</code>.
     */
    public Long getStatus() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.group.admin_id</code>.
     */
    public GroupRecord setAdminId(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.group.admin_id</code>.
     */
    public UUID getAdminId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.group.budget</code>.
     */
    public GroupRecord setBudget(Float value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.group.budget</code>.
     */
    public Float getBudget() {
        return (Float) get(6);
    }

    /**
     * Setter for <code>public.group.description</code>.
     */
    public GroupRecord setDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.group.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.group.selection_date</code>.
     */
    public GroupRecord setSelectionDate(LocalDate value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.group.selection_date</code>.
     */
    public LocalDate getSelectionDate() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>public.group.reminder</code>.
     */
    public GroupRecord setReminder(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.group.reminder</code>.
     */
    public Boolean getReminder() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.group.unlikely_count</code>.
     */
    public GroupRecord setUnlikelyCount(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.group.unlikely_count</code>.
     */
    public Long getUnlikelyCount() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GroupRecord
     */
    public GroupRecord() {
        super(Group.GROUP);
    }

    /**
     * Create a detached, initialised GroupRecord
     */
    public GroupRecord(UUID uuid, LocalDateTime created, LocalDateTime lastModified, String invite, Long status, UUID adminId, Float budget, String description, LocalDate selectionDate, Boolean reminder, Long unlikelyCount) {
        super(Group.GROUP);

        setUuid(uuid);
        setCreated(created);
        setLastModified(lastModified);
        setInvite(invite);
        setStatus(status);
        setAdminId(adminId);
        setBudget(budget);
        setDescription(description);
        setSelectionDate(selectionDate);
        setReminder(reminder);
        setUnlikelyCount(unlikelyCount);
        resetChangedOnNotNull();
    }
}
