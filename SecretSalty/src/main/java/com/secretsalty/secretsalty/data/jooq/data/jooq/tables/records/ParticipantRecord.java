/*
 * This file is generated by jOOQ.
 */
package data.jooq.tables.records;


import data.jooq.tables.Participant;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ParticipantRecord extends TableRecordImpl<ParticipantRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.participant.group_id</code>.
     */
    public ParticipantRecord setGroupId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.group_id</code>.
     */
    public UUID getGroupId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.participant.user_id</code>.
     */
    public ParticipantRecord setUserId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.participant.created</code>.
     */
    public ParticipantRecord setCreated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.participant.last_modified</code>.
     */
    public ParticipantRecord setLastModified(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.last_modified</code>.
     */
    public LocalDateTime getLastModified() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.participant.excluded</code>.
     */
    public ParticipantRecord setExcluded(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.excluded</code>.
     */
    public UUID getExcluded() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.participant.avoid</code>.
     */
    public ParticipantRecord setAvoid(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.avoid</code>.
     */
    public UUID getAvoid() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.participant.interests</code>.
     */
    public ParticipantRecord setInterests(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.interests</code>.
     */
    public String getInterests() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.participant.bengerl_id</code>.
     */
    public ParticipantRecord setBengerlId(UUID value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.participant.bengerl_id</code>.
     */
    public UUID getBengerlId() {
        return (UUID) get(7);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParticipantRecord
     */
    public ParticipantRecord() {
        super(Participant.PARTICIPANT);
    }

    /**
     * Create a detached, initialised ParticipantRecord
     */
    public ParticipantRecord(UUID groupId, UUID userId, LocalDateTime created, LocalDateTime lastModified, UUID excluded, UUID avoid, String interests, UUID bengerlId) {
        super(Participant.PARTICIPANT);

        setGroupId(groupId);
        setUserId(userId);
        setCreated(created);
        setLastModified(lastModified);
        setExcluded(excluded);
        setAvoid(avoid);
        setInterests(interests);
        setBengerlId(bengerlId);
        resetChangedOnNotNull();
    }
}
