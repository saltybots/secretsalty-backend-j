/*
 * This file is generated by jOOQ.
 */
package data.jooq.tables.records;


import data.jooq.tables.User;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.uuid</code>.
     */
    public UserRecord setUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user.created</code>.
     */
    public UserRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user.last_modified</code>.
     */
    public UserRecord setLastModified(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user.last_modified</code>.
     */
    public LocalDateTime getLastModified() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user.display_name</code>.
     */
    public UserRecord setDisplayName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UUID uuid, LocalDateTime created, LocalDateTime lastModified, String email, String displayName) {
        super(User.USER);

        setUuid(uuid);
        setCreated(created);
        setLastModified(lastModified);
        setEmail(email);
        setDisplayName(displayName);
        resetChangedOnNotNull();
    }
}
