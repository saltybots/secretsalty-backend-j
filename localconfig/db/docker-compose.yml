version: '3.8'

services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: secretsalty
      POSTGRES_PASSWORD: localpass1
    volumes:
      - db:/var/lib/postgresql/data
  reverse-proxy:
    image: traefik:v3.0
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.http.address=:80"
      #- "--entryPoints.websecure.address=:443"
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      #- "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # doc: https://doc.traefik.io/traefik/user-guides/docker-compose/acme-tls/
    ports:
      # The HTTP port
      - "80:80"
      # https port
      # - "443:443"
      # The Web UI (enabled by --api.insecure=true), find at: http://localhost:8080/dashboard/#/
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock"
      #- "./letsencrypt:/letsencrypt"
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - traefik.enable=true #expose service to be reachable
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.routers.whoami.entrypoints=http
      #- traefik.http.routers.whoami.tls.certresolver=myresolver

volumes:
  db:
    driver: local